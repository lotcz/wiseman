<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:WisemanWindowsClient">
    
    <Thickness x:Key="DefaultPadding" Top="10" Bottom="10" Left="10" Right="10"/>
    <Thickness x:Key="DefaultMargin" Top="0" Bottom="0" Left="0" Right="0"/>
    <Thickness x:Key="DefaultBorderThickness" Top="1" Bottom="1" Left="1" Right="1"/>
    <sys:Double x:Key="DefaultFontSize">14</sys:Double>

    <Thickness x:Key="ButtonPadding" Top="3" Bottom="3" Left="10" Right="10"/>
    <Thickness x:Key="ButtonMargin" Top="0" Bottom="0" Left="10" Right="0"/>

    <Style TargetType="{x:Type FrameworkElement}" x:Key="BasicFrameworkElementStyle">        
        <Setter Property="Margin" Value="{DynamicResource DefaultMargin}"/>
    </Style>

    <Style TargetType="{x:Type StackPanel}" BasedOn="{StaticResource BasicFrameworkElementStyle}" >
    </Style>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BasicFrameworkElementStyle}" >
    </Style>
    
    <Style TargetType="{x:Type Control}" x:Key="BasicControlStyle" BasedOn="{StaticResource BasicFrameworkElementStyle}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>        
        <Setter Property="Padding" Value="{DynamicResource DefaultPadding}"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}"/>
    </Style>
   
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource BasicControlStyle}">
    </Style>
    
    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource BasicControlStyle}">
    </Style>

    <Style TargetType="{x:Type Window}" x:Key="BasicWindowStyle" BasedOn="{StaticResource BasicControlStyle}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Icon" Value="/Images/Icon.ico"/>
        <Setter Property="BorderThickness" Value="{DynamicResource DefaultBorderThickness}"/>
    </Style>

    <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BasicFrameworkElementStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
    </Style>    
    
    <Style TargetType="{x:Type Button}" x:Key="BasicButtonStyle" BasedOn="{StaticResource BasicControlStyle}">
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="False"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonHoverForegroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonHoverBorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BasicButtonStyle}">
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="SmallButtonStyle" BasedOn="{StaticResource BasicButtonStyle}">
        <Setter Property="Padding" Value="10,5,10,5" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BigButtonStyle" BasedOn="{StaticResource BasicButtonStyle}">
        <Setter Property="Padding" Value="20,10,20,10" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SmallMenuButtonStyle" BasedOn="{StaticResource SmallButtonStyle}">
        <Style.Triggers>
            <Trigger Property="HorizontalAlignment" Value="Left">
                <Setter Property="Margin" Value="0,0,10,0" />
            </Trigger>
            <Trigger Property="HorizontalAlignment" Value="Right">
                <Setter Property="Margin" Value="10,0,0,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BigMenuButtonStyle" BasedOn="{StaticResource BigButtonStyle}">
        <Setter Property="Margin" Value="0,20,0,0" />
    </Style>

</ResourceDictionary>
